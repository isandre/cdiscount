<?php
/**
 * CdsMarketplaceApiModelsOffersSubmissionApiOfferSubmission
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Order Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CdsMarketplaceApiModelsOffersSubmissionApiOfferSubmission Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class CdsMarketplaceApiModelsOffersSubmissionApiOfferSubmission implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Cds.MarketplaceApi.Models.Offers.SubmissionApi.OfferSubmission';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'comment' => 'string',
        'seller_product_id' => 'string',
        'ean' => 'string',
        'product_condition' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiProductCondition',
        'offer_pool_list' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiOfferPool[]',
        'quantity' => 'int',
        'price' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiPriceItem',
        'discounts' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiDiscount[]',
        'shipping_list' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiShipping[]',
        'price_must_be_aligned' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiPriceMustBeAligned',
        'minimum_price_for_price_alignment' => 'double',
        'product_packaging_unit' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiPackagingUnit',
        'product_packaging_value' => 'double',
        'is_cdav' => 'bool',
        'bluff_delivery_max' => 'int',
        'preparation_time' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'comment' => null,
        'seller_product_id' => null,
        'ean' => null,
        'product_condition' => null,
        'offer_pool_list' => null,
        'quantity' => 'int32',
        'price' => null,
        'discounts' => null,
        'shipping_list' => null,
        'price_must_be_aligned' => null,
        'minimum_price_for_price_alignment' => 'double',
        'product_packaging_unit' => null,
        'product_packaging_value' => 'double',
        'is_cdav' => null,
        'bluff_delivery_max' => 'int32',
        'preparation_time' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'comment' => 'comment',
        'seller_product_id' => 'seller_product_id',
        'ean' => 'ean',
        'product_condition' => 'product_condition',
        'offer_pool_list' => 'offer_pool_list',
        'quantity' => 'quantity',
        'price' => 'price',
        'discounts' => 'discounts',
        'shipping_list' => 'shipping_list',
        'price_must_be_aligned' => 'price_must_be_aligned',
        'minimum_price_for_price_alignment' => 'minimum_price_for_price_alignment',
        'product_packaging_unit' => 'product_packaging_unit',
        'product_packaging_value' => 'product_packaging_value',
        'is_cdav' => 'is_cdav',
        'bluff_delivery_max' => 'bluff_delivery_max',
        'preparation_time' => 'preparation_time'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'comment' => 'setComment',
        'seller_product_id' => 'setSellerProductId',
        'ean' => 'setEan',
        'product_condition' => 'setProductCondition',
        'offer_pool_list' => 'setOfferPoolList',
        'quantity' => 'setQuantity',
        'price' => 'setPrice',
        'discounts' => 'setDiscounts',
        'shipping_list' => 'setShippingList',
        'price_must_be_aligned' => 'setPriceMustBeAligned',
        'minimum_price_for_price_alignment' => 'setMinimumPriceForPriceAlignment',
        'product_packaging_unit' => 'setProductPackagingUnit',
        'product_packaging_value' => 'setProductPackagingValue',
        'is_cdav' => 'setIsCdav',
        'bluff_delivery_max' => 'setBluffDeliveryMax',
        'preparation_time' => 'setPreparationTime'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'comment' => 'getComment',
        'seller_product_id' => 'getSellerProductId',
        'ean' => 'getEan',
        'product_condition' => 'getProductCondition',
        'offer_pool_list' => 'getOfferPoolList',
        'quantity' => 'getQuantity',
        'price' => 'getPrice',
        'discounts' => 'getDiscounts',
        'shipping_list' => 'getShippingList',
        'price_must_be_aligned' => 'getPriceMustBeAligned',
        'minimum_price_for_price_alignment' => 'getMinimumPriceForPriceAlignment',
        'product_packaging_unit' => 'getProductPackagingUnit',
        'product_packaging_value' => 'getProductPackagingValue',
        'is_cdav' => 'getIsCdav',
        'bluff_delivery_max' => 'getBluffDeliveryMax',
        'preparation_time' => 'getPreparationTime'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['comment'] = $data['comment'] ?? null;
        $this->container['seller_product_id'] = $data['seller_product_id'] ?? null;
        $this->container['ean'] = $data['ean'] ?? null;
        $this->container['product_condition'] = $data['product_condition'] ?? null;
        $this->container['offer_pool_list'] = $data['offer_pool_list'] ?? null;
        $this->container['quantity'] = $data['quantity'] ?? null;
        $this->container['price'] = $data['price'] ?? null;
        $this->container['discounts'] = $data['discounts'] ?? null;
        $this->container['shipping_list'] = $data['shipping_list'] ?? null;
        $this->container['price_must_be_aligned'] = $data['price_must_be_aligned'] ?? null;
        $this->container['minimum_price_for_price_alignment'] = $data['minimum_price_for_price_alignment'] ?? null;
        $this->container['product_packaging_unit'] = $data['product_packaging_unit'] ?? null;
        $this->container['product_packaging_value'] = $data['product_packaging_value'] ?? null;
        $this->container['is_cdav'] = $data['is_cdav'] ?? null;
        $this->container['bluff_delivery_max'] = $data['bluff_delivery_max'] ?? null;
        $this->container['preparation_time'] = $data['preparation_time'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets comment
     *
     * @return string|null
     */
    public function getComment()
    {
        return $this->container['comment'];
    }

    /**
     * Sets comment
     *
     * @param string|null $comment comment
     *
     * @return self
     */
    public function setComment($comment)
    {
        $this->container['comment'] = $comment;

        return $this;
    }

    /**
     * Gets seller_product_id
     *
     * @return string|null
     */
    public function getSellerProductId()
    {
        return $this->container['seller_product_id'];
    }

    /**
     * Sets seller_product_id
     *
     * @param string|null $seller_product_id seller_product_id
     *
     * @return self
     */
    public function setSellerProductId($seller_product_id)
    {
        $this->container['seller_product_id'] = $seller_product_id;

        return $this;
    }

    /**
     * Gets ean
     *
     * @return string|null
     */
    public function getEan()
    {
        return $this->container['ean'];
    }

    /**
     * Sets ean
     *
     * @param string|null $ean ean
     *
     * @return self
     */
    public function setEan($ean)
    {
        $this->container['ean'] = $ean;

        return $this;
    }

    /**
     * Gets product_condition
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiProductCondition|null
     */
    public function getProductCondition()
    {
        return $this->container['product_condition'];
    }

    /**
     * Sets product_condition
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiProductCondition|null $product_condition product_condition
     *
     * @return self
     */
    public function setProductCondition($product_condition)
    {
        $this->container['product_condition'] = $product_condition;

        return $this;
    }

    /**
     * Gets offer_pool_list
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiOfferPool[]|null
     */
    public function getOfferPoolList()
    {
        return $this->container['offer_pool_list'];
    }

    /**
     * Sets offer_pool_list
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiOfferPool[]|null $offer_pool_list offer_pool_list
     *
     * @return self
     */
    public function setOfferPoolList($offer_pool_list)
    {
        $this->container['offer_pool_list'] = $offer_pool_list;

        return $this;
    }

    /**
     * Gets quantity
     *
     * @return int|null
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     *
     * @param int|null $quantity quantity
     *
     * @return self
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets price
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiPriceItem|null
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiPriceItem|null $price price
     *
     * @return self
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets discounts
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiDiscount[]|null
     */
    public function getDiscounts()
    {
        return $this->container['discounts'];
    }

    /**
     * Sets discounts
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiDiscount[]|null $discounts discounts
     *
     * @return self
     */
    public function setDiscounts($discounts)
    {
        $this->container['discounts'] = $discounts;

        return $this;
    }

    /**
     * Gets shipping_list
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiShipping[]|null
     */
    public function getShippingList()
    {
        return $this->container['shipping_list'];
    }

    /**
     * Sets shipping_list
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiShipping[]|null $shipping_list shipping_list
     *
     * @return self
     */
    public function setShippingList($shipping_list)
    {
        $this->container['shipping_list'] = $shipping_list;

        return $this;
    }

    /**
     * Gets price_must_be_aligned
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiPriceMustBeAligned|null
     */
    public function getPriceMustBeAligned()
    {
        return $this->container['price_must_be_aligned'];
    }

    /**
     * Sets price_must_be_aligned
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiPriceMustBeAligned|null $price_must_be_aligned price_must_be_aligned
     *
     * @return self
     */
    public function setPriceMustBeAligned($price_must_be_aligned)
    {
        $this->container['price_must_be_aligned'] = $price_must_be_aligned;

        return $this;
    }

    /**
     * Gets minimum_price_for_price_alignment
     *
     * @return double|null
     */
    public function getMinimumPriceForPriceAlignment()
    {
        return $this->container['minimum_price_for_price_alignment'];
    }

    /**
     * Sets minimum_price_for_price_alignment
     *
     * @param double|null $minimum_price_for_price_alignment minimum_price_for_price_alignment
     *
     * @return self
     */
    public function setMinimumPriceForPriceAlignment($minimum_price_for_price_alignment)
    {
        $this->container['minimum_price_for_price_alignment'] = $minimum_price_for_price_alignment;

        return $this;
    }

    /**
     * Gets product_packaging_unit
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiPackagingUnit|null
     */
    public function getProductPackagingUnit()
    {
        return $this->container['product_packaging_unit'];
    }

    /**
     * Sets product_packaging_unit
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsOffersSubmissionApiPackagingUnit|null $product_packaging_unit product_packaging_unit
     *
     * @return self
     */
    public function setProductPackagingUnit($product_packaging_unit)
    {
        $this->container['product_packaging_unit'] = $product_packaging_unit;

        return $this;
    }

    /**
     * Gets product_packaging_value
     *
     * @return double|null
     */
    public function getProductPackagingValue()
    {
        return $this->container['product_packaging_value'];
    }

    /**
     * Sets product_packaging_value
     *
     * @param double|null $product_packaging_value product_packaging_value
     *
     * @return self
     */
    public function setProductPackagingValue($product_packaging_value)
    {
        $this->container['product_packaging_value'] = $product_packaging_value;

        return $this;
    }

    /**
     * Gets is_cdav
     *
     * @return bool|null
     */
    public function getIsCdav()
    {
        return $this->container['is_cdav'];
    }

    /**
     * Sets is_cdav
     *
     * @param bool|null $is_cdav is_cdav
     *
     * @return self
     */
    public function setIsCdav($is_cdav)
    {
        $this->container['is_cdav'] = $is_cdav;

        return $this;
    }

    /**
     * Gets bluff_delivery_max
     *
     * @return int|null
     */
    public function getBluffDeliveryMax()
    {
        return $this->container['bluff_delivery_max'];
    }

    /**
     * Sets bluff_delivery_max
     *
     * @param int|null $bluff_delivery_max bluff_delivery_max
     *
     * @return self
     */
    public function setBluffDeliveryMax($bluff_delivery_max)
    {
        $this->container['bluff_delivery_max'] = $bluff_delivery_max;

        return $this;
    }

    /**
     * Gets preparation_time
     *
     * @return int|null
     */
    public function getPreparationTime()
    {
        return $this->container['preparation_time'];
    }

    /**
     * Sets preparation_time
     *
     * @param int|null $preparation_time preparation_time
     *
     * @return self
     */
    public function setPreparationTime($preparation_time)
    {
        $this->container['preparation_time'] = $preparation_time;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


