<?php
/**
 * CdsMarketplaceApiModelsOrderOrderCancelRequest
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Order Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CdsMarketplaceApiModelsOrderOrderCancelRequest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class CdsMarketplaceApiModelsOrderOrderCancelRequest implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Cds.MarketplaceApi.Models.Order.OrderCancelRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'caller' => 'string',
        'caller_code' => 'string',
        'customer_action_date' => '\DateTime',
        'customer_case_action_id' => 'int',
        'customer_case_comment' => 'string',
        'customer_case_id' => 'int',
        'customer_case_typology_id' => 'int',
        'customer_time_zone' => 'string',
        'global_user_id' => 'string',
        'motif_id' => 'int',
        'order_cancel_motive' => 'string',
        'user_id' => 'int',
        'with_customer_case_handling' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'caller' => null,
        'caller_code' => null,
        'customer_action_date' => 'date-time',
        'customer_case_action_id' => 'int32',
        'customer_case_comment' => null,
        'customer_case_id' => 'int32',
        'customer_case_typology_id' => 'int32',
        'customer_time_zone' => null,
        'global_user_id' => null,
        'motif_id' => 'int32',
        'order_cancel_motive' => null,
        'user_id' => 'int32',
        'with_customer_case_handling' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'caller' => 'caller',
        'caller_code' => 'caller_code',
        'customer_action_date' => 'customer_action_date',
        'customer_case_action_id' => 'customer_case_action_id',
        'customer_case_comment' => 'customer_case_comment',
        'customer_case_id' => 'customer_case_id',
        'customer_case_typology_id' => 'customer_case_typology_id',
        'customer_time_zone' => 'customer_time_zone',
        'global_user_id' => 'global_user_id',
        'motif_id' => 'motif_id',
        'order_cancel_motive' => 'order_cancel_motive',
        'user_id' => 'user_id',
        'with_customer_case_handling' => 'with_customer_case_handling'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'caller' => 'setCaller',
        'caller_code' => 'setCallerCode',
        'customer_action_date' => 'setCustomerActionDate',
        'customer_case_action_id' => 'setCustomerCaseActionId',
        'customer_case_comment' => 'setCustomerCaseComment',
        'customer_case_id' => 'setCustomerCaseId',
        'customer_case_typology_id' => 'setCustomerCaseTypologyId',
        'customer_time_zone' => 'setCustomerTimeZone',
        'global_user_id' => 'setGlobalUserId',
        'motif_id' => 'setMotifId',
        'order_cancel_motive' => 'setOrderCancelMotive',
        'user_id' => 'setUserId',
        'with_customer_case_handling' => 'setWithCustomerCaseHandling'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'caller' => 'getCaller',
        'caller_code' => 'getCallerCode',
        'customer_action_date' => 'getCustomerActionDate',
        'customer_case_action_id' => 'getCustomerCaseActionId',
        'customer_case_comment' => 'getCustomerCaseComment',
        'customer_case_id' => 'getCustomerCaseId',
        'customer_case_typology_id' => 'getCustomerCaseTypologyId',
        'customer_time_zone' => 'getCustomerTimeZone',
        'global_user_id' => 'getGlobalUserId',
        'motif_id' => 'getMotifId',
        'order_cancel_motive' => 'getOrderCancelMotive',
        'user_id' => 'getUserId',
        'with_customer_case_handling' => 'getWithCustomerCaseHandling'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['caller'] = $data['caller'] ?? null;
        $this->container['caller_code'] = $data['caller_code'] ?? null;
        $this->container['customer_action_date'] = $data['customer_action_date'] ?? null;
        $this->container['customer_case_action_id'] = $data['customer_case_action_id'] ?? null;
        $this->container['customer_case_comment'] = $data['customer_case_comment'] ?? null;
        $this->container['customer_case_id'] = $data['customer_case_id'] ?? null;
        $this->container['customer_case_typology_id'] = $data['customer_case_typology_id'] ?? null;
        $this->container['customer_time_zone'] = $data['customer_time_zone'] ?? null;
        $this->container['global_user_id'] = $data['global_user_id'] ?? null;
        $this->container['motif_id'] = $data['motif_id'] ?? null;
        $this->container['order_cancel_motive'] = $data['order_cancel_motive'] ?? null;
        $this->container['user_id'] = $data['user_id'] ?? null;
        $this->container['with_customer_case_handling'] = $data['with_customer_case_handling'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets caller
     *
     * @return string|null
     */
    public function getCaller()
    {
        return $this->container['caller'];
    }

    /**
     * Sets caller
     *
     * @param string|null $caller caller
     *
     * @return self
     */
    public function setCaller($caller)
    {
        $this->container['caller'] = $caller;

        return $this;
    }

    /**
     * Gets caller_code
     *
     * @return string|null
     */
    public function getCallerCode()
    {
        return $this->container['caller_code'];
    }

    /**
     * Sets caller_code
     *
     * @param string|null $caller_code caller_code
     *
     * @return self
     */
    public function setCallerCode($caller_code)
    {
        $this->container['caller_code'] = $caller_code;

        return $this;
    }

    /**
     * Gets customer_action_date
     *
     * @return \DateTime|null
     */
    public function getCustomerActionDate()
    {
        return $this->container['customer_action_date'];
    }

    /**
     * Sets customer_action_date
     *
     * @param \DateTime|null $customer_action_date customer_action_date
     *
     * @return self
     */
    public function setCustomerActionDate($customer_action_date)
    {
        $this->container['customer_action_date'] = $customer_action_date;

        return $this;
    }

    /**
     * Gets customer_case_action_id
     *
     * @return int|null
     */
    public function getCustomerCaseActionId()
    {
        return $this->container['customer_case_action_id'];
    }

    /**
     * Sets customer_case_action_id
     *
     * @param int|null $customer_case_action_id customer_case_action_id
     *
     * @return self
     */
    public function setCustomerCaseActionId($customer_case_action_id)
    {
        $this->container['customer_case_action_id'] = $customer_case_action_id;

        return $this;
    }

    /**
     * Gets customer_case_comment
     *
     * @return string|null
     */
    public function getCustomerCaseComment()
    {
        return $this->container['customer_case_comment'];
    }

    /**
     * Sets customer_case_comment
     *
     * @param string|null $customer_case_comment customer_case_comment
     *
     * @return self
     */
    public function setCustomerCaseComment($customer_case_comment)
    {
        $this->container['customer_case_comment'] = $customer_case_comment;

        return $this;
    }

    /**
     * Gets customer_case_id
     *
     * @return int|null
     */
    public function getCustomerCaseId()
    {
        return $this->container['customer_case_id'];
    }

    /**
     * Sets customer_case_id
     *
     * @param int|null $customer_case_id customer_case_id
     *
     * @return self
     */
    public function setCustomerCaseId($customer_case_id)
    {
        $this->container['customer_case_id'] = $customer_case_id;

        return $this;
    }

    /**
     * Gets customer_case_typology_id
     *
     * @return int|null
     */
    public function getCustomerCaseTypologyId()
    {
        return $this->container['customer_case_typology_id'];
    }

    /**
     * Sets customer_case_typology_id
     *
     * @param int|null $customer_case_typology_id customer_case_typology_id
     *
     * @return self
     */
    public function setCustomerCaseTypologyId($customer_case_typology_id)
    {
        $this->container['customer_case_typology_id'] = $customer_case_typology_id;

        return $this;
    }

    /**
     * Gets customer_time_zone
     *
     * @return string|null
     */
    public function getCustomerTimeZone()
    {
        return $this->container['customer_time_zone'];
    }

    /**
     * Sets customer_time_zone
     *
     * @param string|null $customer_time_zone customer_time_zone
     *
     * @return self
     */
    public function setCustomerTimeZone($customer_time_zone)
    {
        $this->container['customer_time_zone'] = $customer_time_zone;

        return $this;
    }

    /**
     * Gets global_user_id
     *
     * @return string|null
     */
    public function getGlobalUserId()
    {
        return $this->container['global_user_id'];
    }

    /**
     * Sets global_user_id
     *
     * @param string|null $global_user_id global_user_id
     *
     * @return self
     */
    public function setGlobalUserId($global_user_id)
    {
        $this->container['global_user_id'] = $global_user_id;

        return $this;
    }

    /**
     * Gets motif_id
     *
     * @return int|null
     */
    public function getMotifId()
    {
        return $this->container['motif_id'];
    }

    /**
     * Sets motif_id
     *
     * @param int|null $motif_id motif_id
     *
     * @return self
     */
    public function setMotifId($motif_id)
    {
        $this->container['motif_id'] = $motif_id;

        return $this;
    }

    /**
     * Gets order_cancel_motive
     *
     * @return string|null
     */
    public function getOrderCancelMotive()
    {
        return $this->container['order_cancel_motive'];
    }

    /**
     * Sets order_cancel_motive
     *
     * @param string|null $order_cancel_motive order_cancel_motive
     *
     * @return self
     */
    public function setOrderCancelMotive($order_cancel_motive)
    {
        $this->container['order_cancel_motive'] = $order_cancel_motive;

        return $this;
    }

    /**
     * Gets user_id
     *
     * @return int|null
     */
    public function getUserId()
    {
        return $this->container['user_id'];
    }

    /**
     * Sets user_id
     *
     * @param int|null $user_id user_id
     *
     * @return self
     */
    public function setUserId($user_id)
    {
        $this->container['user_id'] = $user_id;

        return $this;
    }

    /**
     * Gets with_customer_case_handling
     *
     * @return bool|null
     */
    public function getWithCustomerCaseHandling()
    {
        return $this->container['with_customer_case_handling'];
    }

    /**
     * Sets with_customer_case_handling
     *
     * @param bool|null $with_customer_case_handling with_customer_case_handling
     *
     * @return self
     */
    public function setWithCustomerCaseHandling($with_customer_case_handling)
    {
        $this->container['with_customer_case_handling'] = $with_customer_case_handling;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


