<?php
/**
 * CdsMarketplaceApiModelsSellerSellerInformation
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Order Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CdsMarketplaceApiModelsSellerSellerInformation Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class CdsMarketplaceApiModelsSellerSellerInformation implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Cds.MarketplaceApi.Models.Seller.SellerInformation';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'seller_id' => 'int',
        'login' => 'string',
        'api_login' => 'string',
        'creation_date' => '\DateTime',
        'shop_name' => 'string',
        'shop_url' => 'string',
        'siret_number' => 'string',
        'last_update_date' => '\DateTime',
        'delivery_modes' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsSellerHyperMedia',
        'sales_channels' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsSellerHyperMedia',
        'email' => 'string',
        'sales_advices_email' => 'string',
        'notifications_email' => 'string',
        'seller_sub_state' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsSellerEnumsSellerSubState',
        'seller_state' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsSellerEnumsSellerState',
        'mobile_number' => 'string',
        'phone_number' => 'string',
        'seller_address' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsSellerHyperMedia'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'seller_id' => 'int32',
        'login' => null,
        'api_login' => null,
        'creation_date' => 'date-time',
        'shop_name' => null,
        'shop_url' => null,
        'siret_number' => null,
        'last_update_date' => 'date-time',
        'delivery_modes' => null,
        'sales_channels' => null,
        'email' => null,
        'sales_advices_email' => null,
        'notifications_email' => null,
        'seller_sub_state' => null,
        'seller_state' => null,
        'mobile_number' => null,
        'phone_number' => null,
        'seller_address' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'seller_id' => 'seller_id',
        'login' => 'login',
        'api_login' => 'api_login',
        'creation_date' => 'creation_date',
        'shop_name' => 'shop_name',
        'shop_url' => 'shop_url',
        'siret_number' => 'siret_number',
        'last_update_date' => 'last_update_date',
        'delivery_modes' => 'delivery_modes',
        'sales_channels' => 'sales_channels',
        'email' => 'email',
        'sales_advices_email' => 'sales_advices_email',
        'notifications_email' => 'notifications_email',
        'seller_sub_state' => 'seller_sub_state',
        'seller_state' => 'seller_state',
        'mobile_number' => 'mobile_number',
        'phone_number' => 'phone_number',
        'seller_address' => 'seller_address'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'seller_id' => 'setSellerId',
        'login' => 'setLogin',
        'api_login' => 'setApiLogin',
        'creation_date' => 'setCreationDate',
        'shop_name' => 'setShopName',
        'shop_url' => 'setShopUrl',
        'siret_number' => 'setSiretNumber',
        'last_update_date' => 'setLastUpdateDate',
        'delivery_modes' => 'setDeliveryModes',
        'sales_channels' => 'setSalesChannels',
        'email' => 'setEmail',
        'sales_advices_email' => 'setSalesAdvicesEmail',
        'notifications_email' => 'setNotificationsEmail',
        'seller_sub_state' => 'setSellerSubState',
        'seller_state' => 'setSellerState',
        'mobile_number' => 'setMobileNumber',
        'phone_number' => 'setPhoneNumber',
        'seller_address' => 'setSellerAddress'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'seller_id' => 'getSellerId',
        'login' => 'getLogin',
        'api_login' => 'getApiLogin',
        'creation_date' => 'getCreationDate',
        'shop_name' => 'getShopName',
        'shop_url' => 'getShopUrl',
        'siret_number' => 'getSiretNumber',
        'last_update_date' => 'getLastUpdateDate',
        'delivery_modes' => 'getDeliveryModes',
        'sales_channels' => 'getSalesChannels',
        'email' => 'getEmail',
        'sales_advices_email' => 'getSalesAdvicesEmail',
        'notifications_email' => 'getNotificationsEmail',
        'seller_sub_state' => 'getSellerSubState',
        'seller_state' => 'getSellerState',
        'mobile_number' => 'getMobileNumber',
        'phone_number' => 'getPhoneNumber',
        'seller_address' => 'getSellerAddress'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['seller_id'] = $data['seller_id'] ?? null;
        $this->container['login'] = $data['login'] ?? null;
        $this->container['api_login'] = $data['api_login'] ?? null;
        $this->container['creation_date'] = $data['creation_date'] ?? null;
        $this->container['shop_name'] = $data['shop_name'] ?? null;
        $this->container['shop_url'] = $data['shop_url'] ?? null;
        $this->container['siret_number'] = $data['siret_number'] ?? null;
        $this->container['last_update_date'] = $data['last_update_date'] ?? null;
        $this->container['delivery_modes'] = $data['delivery_modes'] ?? null;
        $this->container['sales_channels'] = $data['sales_channels'] ?? null;
        $this->container['email'] = $data['email'] ?? null;
        $this->container['sales_advices_email'] = $data['sales_advices_email'] ?? null;
        $this->container['notifications_email'] = $data['notifications_email'] ?? null;
        $this->container['seller_sub_state'] = $data['seller_sub_state'] ?? null;
        $this->container['seller_state'] = $data['seller_state'] ?? null;
        $this->container['mobile_number'] = $data['mobile_number'] ?? null;
        $this->container['phone_number'] = $data['phone_number'] ?? null;
        $this->container['seller_address'] = $data['seller_address'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets seller_id
     *
     * @return int|null
     */
    public function getSellerId()
    {
        return $this->container['seller_id'];
    }

    /**
     * Sets seller_id
     *
     * @param int|null $seller_id seller_id
     *
     * @return self
     */
    public function setSellerId($seller_id)
    {
        $this->container['seller_id'] = $seller_id;

        return $this;
    }

    /**
     * Gets login
     *
     * @return string|null
     */
    public function getLogin()
    {
        return $this->container['login'];
    }

    /**
     * Sets login
     *
     * @param string|null $login login
     *
     * @return self
     */
    public function setLogin($login)
    {
        $this->container['login'] = $login;

        return $this;
    }

    /**
     * Gets api_login
     *
     * @return string|null
     */
    public function getApiLogin()
    {
        return $this->container['api_login'];
    }

    /**
     * Sets api_login
     *
     * @param string|null $api_login api_login
     *
     * @return self
     */
    public function setApiLogin($api_login)
    {
        $this->container['api_login'] = $api_login;

        return $this;
    }

    /**
     * Gets creation_date
     *
     * @return \DateTime|null
     */
    public function getCreationDate()
    {
        return $this->container['creation_date'];
    }

    /**
     * Sets creation_date
     *
     * @param \DateTime|null $creation_date creation_date
     *
     * @return self
     */
    public function setCreationDate($creation_date)
    {
        $this->container['creation_date'] = $creation_date;

        return $this;
    }

    /**
     * Gets shop_name
     *
     * @return string|null
     */
    public function getShopName()
    {
        return $this->container['shop_name'];
    }

    /**
     * Sets shop_name
     *
     * @param string|null $shop_name shop_name
     *
     * @return self
     */
    public function setShopName($shop_name)
    {
        $this->container['shop_name'] = $shop_name;

        return $this;
    }

    /**
     * Gets shop_url
     *
     * @return string|null
     */
    public function getShopUrl()
    {
        return $this->container['shop_url'];
    }

    /**
     * Sets shop_url
     *
     * @param string|null $shop_url shop_url
     *
     * @return self
     */
    public function setShopUrl($shop_url)
    {
        $this->container['shop_url'] = $shop_url;

        return $this;
    }

    /**
     * Gets siret_number
     *
     * @return string|null
     */
    public function getSiretNumber()
    {
        return $this->container['siret_number'];
    }

    /**
     * Sets siret_number
     *
     * @param string|null $siret_number siret_number
     *
     * @return self
     */
    public function setSiretNumber($siret_number)
    {
        $this->container['siret_number'] = $siret_number;

        return $this;
    }

    /**
     * Gets last_update_date
     *
     * @return \DateTime|null
     */
    public function getLastUpdateDate()
    {
        return $this->container['last_update_date'];
    }

    /**
     * Sets last_update_date
     *
     * @param \DateTime|null $last_update_date last_update_date
     *
     * @return self
     */
    public function setLastUpdateDate($last_update_date)
    {
        $this->container['last_update_date'] = $last_update_date;

        return $this;
    }

    /**
     * Gets delivery_modes
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsSellerHyperMedia|null
     */
    public function getDeliveryModes()
    {
        return $this->container['delivery_modes'];
    }

    /**
     * Sets delivery_modes
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsSellerHyperMedia|null $delivery_modes delivery_modes
     *
     * @return self
     */
    public function setDeliveryModes($delivery_modes)
    {
        $this->container['delivery_modes'] = $delivery_modes;

        return $this;
    }

    /**
     * Gets sales_channels
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsSellerHyperMedia|null
     */
    public function getSalesChannels()
    {
        return $this->container['sales_channels'];
    }

    /**
     * Sets sales_channels
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsSellerHyperMedia|null $sales_channels sales_channels
     *
     * @return self
     */
    public function setSalesChannels($sales_channels)
    {
        $this->container['sales_channels'] = $sales_channels;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email email
     *
     * @return self
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets sales_advices_email
     *
     * @return string|null
     */
    public function getSalesAdvicesEmail()
    {
        return $this->container['sales_advices_email'];
    }

    /**
     * Sets sales_advices_email
     *
     * @param string|null $sales_advices_email sales_advices_email
     *
     * @return self
     */
    public function setSalesAdvicesEmail($sales_advices_email)
    {
        $this->container['sales_advices_email'] = $sales_advices_email;

        return $this;
    }

    /**
     * Gets notifications_email
     *
     * @return string|null
     */
    public function getNotificationsEmail()
    {
        return $this->container['notifications_email'];
    }

    /**
     * Sets notifications_email
     *
     * @param string|null $notifications_email notifications_email
     *
     * @return self
     */
    public function setNotificationsEmail($notifications_email)
    {
        $this->container['notifications_email'] = $notifications_email;

        return $this;
    }

    /**
     * Gets seller_sub_state
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsSellerEnumsSellerSubState|null
     */
    public function getSellerSubState()
    {
        return $this->container['seller_sub_state'];
    }

    /**
     * Sets seller_sub_state
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsSellerEnumsSellerSubState|null $seller_sub_state seller_sub_state
     *
     * @return self
     */
    public function setSellerSubState($seller_sub_state)
    {
        $this->container['seller_sub_state'] = $seller_sub_state;

        return $this;
    }

    /**
     * Gets seller_state
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsSellerEnumsSellerState|null
     */
    public function getSellerState()
    {
        return $this->container['seller_state'];
    }

    /**
     * Sets seller_state
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsSellerEnumsSellerState|null $seller_state seller_state
     *
     * @return self
     */
    public function setSellerState($seller_state)
    {
        $this->container['seller_state'] = $seller_state;

        return $this;
    }

    /**
     * Gets mobile_number
     *
     * @return string|null
     */
    public function getMobileNumber()
    {
        return $this->container['mobile_number'];
    }

    /**
     * Sets mobile_number
     *
     * @param string|null $mobile_number mobile_number
     *
     * @return self
     */
    public function setMobileNumber($mobile_number)
    {
        $this->container['mobile_number'] = $mobile_number;

        return $this;
    }

    /**
     * Gets phone_number
     *
     * @return string|null
     */
    public function getPhoneNumber()
    {
        return $this->container['phone_number'];
    }

    /**
     * Sets phone_number
     *
     * @param string|null $phone_number phone_number
     *
     * @return self
     */
    public function setPhoneNumber($phone_number)
    {
        $this->container['phone_number'] = $phone_number;

        return $this;
    }

    /**
     * Gets seller_address
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsSellerHyperMedia|null
     */
    public function getSellerAddress()
    {
        return $this->container['seller_address'];
    }

    /**
     * Sets seller_address
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsSellerHyperMedia|null $seller_address seller_address
     *
     * @return self
     */
    public function setSellerAddress($seller_address)
    {
        $this->container['seller_address'] = $seller_address;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


