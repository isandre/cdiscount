<?php
/**
 * CdsMarketplaceApiModelsCategoriesCategory
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Order Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CdsMarketplaceApiModelsCategoriesCategory Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class CdsMarketplaceApiModelsCategoriesCategory implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Cds.MarketplaceApi.Models.Categories.Category';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'code' => 'string',
        'name' => 'string',
        'label' => 'string',
        'children_category_list' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsCategoriesCategory[]',
        'level' => 'double',
        'allow_offer_integration' => 'bool',
        'allow_product_integration' => 'bool',
        'is_ean_optional' => 'bool',
        'is_standard_product_kind_eligible' => 'bool',
        'is_variant_product_kind_eligible' => 'bool',
        'seller_commission_rate' => 'double',
        'default_commission_rate' => 'double',
        'sales_ranking_by_category' => 'string',
        'eligible_sales_channel' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'code' => null,
        'name' => null,
        'label' => null,
        'children_category_list' => null,
        'level' => 'double',
        'allow_offer_integration' => null,
        'allow_product_integration' => null,
        'is_ean_optional' => null,
        'is_standard_product_kind_eligible' => null,
        'is_variant_product_kind_eligible' => null,
        'seller_commission_rate' => 'double',
        'default_commission_rate' => 'double',
        'sales_ranking_by_category' => null,
        'eligible_sales_channel' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'code' => 'code',
        'name' => 'name',
        'label' => 'label',
        'children_category_list' => 'children_category_list',
        'level' => 'level',
        'allow_offer_integration' => 'allow_offer_integration',
        'allow_product_integration' => 'allow_product_integration',
        'is_ean_optional' => 'is_ean_optional',
        'is_standard_product_kind_eligible' => 'is_standard_product_kind_eligible',
        'is_variant_product_kind_eligible' => 'is_variant_product_kind_eligible',
        'seller_commission_rate' => 'seller_commission_rate',
        'default_commission_rate' => 'default_commission_rate',
        'sales_ranking_by_category' => 'sales_ranking_by_category',
        'eligible_sales_channel' => 'eligible_sales_channel'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'code' => 'setCode',
        'name' => 'setName',
        'label' => 'setLabel',
        'children_category_list' => 'setChildrenCategoryList',
        'level' => 'setLevel',
        'allow_offer_integration' => 'setAllowOfferIntegration',
        'allow_product_integration' => 'setAllowProductIntegration',
        'is_ean_optional' => 'setIsEanOptional',
        'is_standard_product_kind_eligible' => 'setIsStandardProductKindEligible',
        'is_variant_product_kind_eligible' => 'setIsVariantProductKindEligible',
        'seller_commission_rate' => 'setSellerCommissionRate',
        'default_commission_rate' => 'setDefaultCommissionRate',
        'sales_ranking_by_category' => 'setSalesRankingByCategory',
        'eligible_sales_channel' => 'setEligibleSalesChannel'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'code' => 'getCode',
        'name' => 'getName',
        'label' => 'getLabel',
        'children_category_list' => 'getChildrenCategoryList',
        'level' => 'getLevel',
        'allow_offer_integration' => 'getAllowOfferIntegration',
        'allow_product_integration' => 'getAllowProductIntegration',
        'is_ean_optional' => 'getIsEanOptional',
        'is_standard_product_kind_eligible' => 'getIsStandardProductKindEligible',
        'is_variant_product_kind_eligible' => 'getIsVariantProductKindEligible',
        'seller_commission_rate' => 'getSellerCommissionRate',
        'default_commission_rate' => 'getDefaultCommissionRate',
        'sales_ranking_by_category' => 'getSalesRankingByCategory',
        'eligible_sales_channel' => 'getEligibleSalesChannel'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['code'] = $data['code'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['label'] = $data['label'] ?? null;
        $this->container['children_category_list'] = $data['children_category_list'] ?? null;
        $this->container['level'] = $data['level'] ?? null;
        $this->container['allow_offer_integration'] = $data['allow_offer_integration'] ?? null;
        $this->container['allow_product_integration'] = $data['allow_product_integration'] ?? null;
        $this->container['is_ean_optional'] = $data['is_ean_optional'] ?? null;
        $this->container['is_standard_product_kind_eligible'] = $data['is_standard_product_kind_eligible'] ?? null;
        $this->container['is_variant_product_kind_eligible'] = $data['is_variant_product_kind_eligible'] ?? null;
        $this->container['seller_commission_rate'] = $data['seller_commission_rate'] ?? null;
        $this->container['default_commission_rate'] = $data['default_commission_rate'] ?? null;
        $this->container['sales_ranking_by_category'] = $data['sales_ranking_by_category'] ?? null;
        $this->container['eligible_sales_channel'] = $data['eligible_sales_channel'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets code
     *
     * @return string|null
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string|null $code code
     *
     * @return self
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets label
     *
     * @return string|null
     */
    public function getLabel()
    {
        return $this->container['label'];
    }

    /**
     * Sets label
     *
     * @param string|null $label label
     *
     * @return self
     */
    public function setLabel($label)
    {
        $this->container['label'] = $label;

        return $this;
    }

    /**
     * Gets children_category_list
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsCategoriesCategory[]|null
     */
    public function getChildrenCategoryList()
    {
        return $this->container['children_category_list'];
    }

    /**
     * Sets children_category_list
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsCategoriesCategory[]|null $children_category_list children_category_list
     *
     * @return self
     */
    public function setChildrenCategoryList($children_category_list)
    {
        $this->container['children_category_list'] = $children_category_list;

        return $this;
    }

    /**
     * Gets level
     *
     * @return double|null
     */
    public function getLevel()
    {
        return $this->container['level'];
    }

    /**
     * Sets level
     *
     * @param double|null $level level
     *
     * @return self
     */
    public function setLevel($level)
    {
        $this->container['level'] = $level;

        return $this;
    }

    /**
     * Gets allow_offer_integration
     *
     * @return bool|null
     */
    public function getAllowOfferIntegration()
    {
        return $this->container['allow_offer_integration'];
    }

    /**
     * Sets allow_offer_integration
     *
     * @param bool|null $allow_offer_integration allow_offer_integration
     *
     * @return self
     */
    public function setAllowOfferIntegration($allow_offer_integration)
    {
        $this->container['allow_offer_integration'] = $allow_offer_integration;

        return $this;
    }

    /**
     * Gets allow_product_integration
     *
     * @return bool|null
     */
    public function getAllowProductIntegration()
    {
        return $this->container['allow_product_integration'];
    }

    /**
     * Sets allow_product_integration
     *
     * @param bool|null $allow_product_integration allow_product_integration
     *
     * @return self
     */
    public function setAllowProductIntegration($allow_product_integration)
    {
        $this->container['allow_product_integration'] = $allow_product_integration;

        return $this;
    }

    /**
     * Gets is_ean_optional
     *
     * @return bool|null
     */
    public function getIsEanOptional()
    {
        return $this->container['is_ean_optional'];
    }

    /**
     * Sets is_ean_optional
     *
     * @param bool|null $is_ean_optional is_ean_optional
     *
     * @return self
     */
    public function setIsEanOptional($is_ean_optional)
    {
        $this->container['is_ean_optional'] = $is_ean_optional;

        return $this;
    }

    /**
     * Gets is_standard_product_kind_eligible
     *
     * @return bool|null
     */
    public function getIsStandardProductKindEligible()
    {
        return $this->container['is_standard_product_kind_eligible'];
    }

    /**
     * Sets is_standard_product_kind_eligible
     *
     * @param bool|null $is_standard_product_kind_eligible is_standard_product_kind_eligible
     *
     * @return self
     */
    public function setIsStandardProductKindEligible($is_standard_product_kind_eligible)
    {
        $this->container['is_standard_product_kind_eligible'] = $is_standard_product_kind_eligible;

        return $this;
    }

    /**
     * Gets is_variant_product_kind_eligible
     *
     * @return bool|null
     */
    public function getIsVariantProductKindEligible()
    {
        return $this->container['is_variant_product_kind_eligible'];
    }

    /**
     * Sets is_variant_product_kind_eligible
     *
     * @param bool|null $is_variant_product_kind_eligible is_variant_product_kind_eligible
     *
     * @return self
     */
    public function setIsVariantProductKindEligible($is_variant_product_kind_eligible)
    {
        $this->container['is_variant_product_kind_eligible'] = $is_variant_product_kind_eligible;

        return $this;
    }

    /**
     * Gets seller_commission_rate
     *
     * @return double|null
     */
    public function getSellerCommissionRate()
    {
        return $this->container['seller_commission_rate'];
    }

    /**
     * Sets seller_commission_rate
     *
     * @param double|null $seller_commission_rate seller_commission_rate
     *
     * @return self
     */
    public function setSellerCommissionRate($seller_commission_rate)
    {
        $this->container['seller_commission_rate'] = $seller_commission_rate;

        return $this;
    }

    /**
     * Gets default_commission_rate
     *
     * @return double|null
     */
    public function getDefaultCommissionRate()
    {
        return $this->container['default_commission_rate'];
    }

    /**
     * Sets default_commission_rate
     *
     * @param double|null $default_commission_rate default_commission_rate
     *
     * @return self
     */
    public function setDefaultCommissionRate($default_commission_rate)
    {
        $this->container['default_commission_rate'] = $default_commission_rate;

        return $this;
    }

    /**
     * Gets sales_ranking_by_category
     *
     * @return string|null
     */
    public function getSalesRankingByCategory()
    {
        return $this->container['sales_ranking_by_category'];
    }

    /**
     * Sets sales_ranking_by_category
     *
     * @param string|null $sales_ranking_by_category sales_ranking_by_category
     *
     * @return self
     */
    public function setSalesRankingByCategory($sales_ranking_by_category)
    {
        $this->container['sales_ranking_by_category'] = $sales_ranking_by_category;

        return $this;
    }

    /**
     * Gets eligible_sales_channel
     *
     * @return string|null
     */
    public function getEligibleSalesChannel()
    {
        return $this->container['eligible_sales_channel'];
    }

    /**
     * Sets eligible_sales_channel
     *
     * @param string|null $eligible_sales_channel eligible_sales_channel
     *
     * @return self
     */
    public function setEligibleSalesChannel($eligible_sales_channel)
    {
        $this->container['eligible_sales_channel'] = $eligible_sales_channel;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


