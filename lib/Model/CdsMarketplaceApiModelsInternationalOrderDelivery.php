<?php
/**
 * CdsMarketplaceApiModelsInternationalOrderDelivery
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Order Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CdsMarketplaceApiModelsInternationalOrderDelivery Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class CdsMarketplaceApiModelsInternationalOrderDelivery implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Cds.MarketplaceApi.Models.InternationalOrder.Delivery';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'mode' => 'string',
        'delivery_network' => 'string',
        'pickup_id' => 'string',
        'delivery_network_type' => 'string',
        'promise_date_min' => '\DateTime',
        'promise_date_max' => '\DateTime',
        'shipping_date_min' => '\DateTime',
        'shipping_date_max' => '\DateTime',
        'shipping' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderShipping'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'mode' => null,
        'delivery_network' => null,
        'pickup_id' => null,
        'delivery_network_type' => null,
        'promise_date_min' => 'date-time',
        'promise_date_max' => 'date-time',
        'shipping_date_min' => 'date-time',
        'shipping_date_max' => 'date-time',
        'shipping' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'mode' => 'mode',
        'delivery_network' => 'delivery_network',
        'pickup_id' => 'pickup_id',
        'delivery_network_type' => 'delivery_network_type',
        'promise_date_min' => 'promise_date_min',
        'promise_date_max' => 'promise_date_max',
        'shipping_date_min' => 'shipping_date_min',
        'shipping_date_max' => 'shipping_date_max',
        'shipping' => 'shipping'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'mode' => 'setMode',
        'delivery_network' => 'setDeliveryNetwork',
        'pickup_id' => 'setPickupId',
        'delivery_network_type' => 'setDeliveryNetworkType',
        'promise_date_min' => 'setPromiseDateMin',
        'promise_date_max' => 'setPromiseDateMax',
        'shipping_date_min' => 'setShippingDateMin',
        'shipping_date_max' => 'setShippingDateMax',
        'shipping' => 'setShipping'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'mode' => 'getMode',
        'delivery_network' => 'getDeliveryNetwork',
        'pickup_id' => 'getPickupId',
        'delivery_network_type' => 'getDeliveryNetworkType',
        'promise_date_min' => 'getPromiseDateMin',
        'promise_date_max' => 'getPromiseDateMax',
        'shipping_date_min' => 'getShippingDateMin',
        'shipping_date_max' => 'getShippingDateMax',
        'shipping' => 'getShipping'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['mode'] = $data['mode'] ?? null;
        $this->container['delivery_network'] = $data['delivery_network'] ?? null;
        $this->container['pickup_id'] = $data['pickup_id'] ?? null;
        $this->container['delivery_network_type'] = $data['delivery_network_type'] ?? null;
        $this->container['promise_date_min'] = $data['promise_date_min'] ?? null;
        $this->container['promise_date_max'] = $data['promise_date_max'] ?? null;
        $this->container['shipping_date_min'] = $data['shipping_date_min'] ?? null;
        $this->container['shipping_date_max'] = $data['shipping_date_max'] ?? null;
        $this->container['shipping'] = $data['shipping'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets mode
     *
     * @return string|null
     */
    public function getMode()
    {
        return $this->container['mode'];
    }

    /**
     * Sets mode
     *
     * @param string|null $mode mode
     *
     * @return self
     */
    public function setMode($mode)
    {
        $this->container['mode'] = $mode;

        return $this;
    }

    /**
     * Gets delivery_network
     *
     * @return string|null
     */
    public function getDeliveryNetwork()
    {
        return $this->container['delivery_network'];
    }

    /**
     * Sets delivery_network
     *
     * @param string|null $delivery_network delivery_network
     *
     * @return self
     */
    public function setDeliveryNetwork($delivery_network)
    {
        $this->container['delivery_network'] = $delivery_network;

        return $this;
    }

    /**
     * Gets pickup_id
     *
     * @return string|null
     */
    public function getPickupId()
    {
        return $this->container['pickup_id'];
    }

    /**
     * Sets pickup_id
     *
     * @param string|null $pickup_id pickup_id
     *
     * @return self
     */
    public function setPickupId($pickup_id)
    {
        $this->container['pickup_id'] = $pickup_id;

        return $this;
    }

    /**
     * Gets delivery_network_type
     *
     * @return string|null
     */
    public function getDeliveryNetworkType()
    {
        return $this->container['delivery_network_type'];
    }

    /**
     * Sets delivery_network_type
     *
     * @param string|null $delivery_network_type delivery_network_type
     *
     * @return self
     */
    public function setDeliveryNetworkType($delivery_network_type)
    {
        $this->container['delivery_network_type'] = $delivery_network_type;

        return $this;
    }

    /**
     * Gets promise_date_min
     *
     * @return \DateTime|null
     */
    public function getPromiseDateMin()
    {
        return $this->container['promise_date_min'];
    }

    /**
     * Sets promise_date_min
     *
     * @param \DateTime|null $promise_date_min promise_date_min
     *
     * @return self
     */
    public function setPromiseDateMin($promise_date_min)
    {
        $this->container['promise_date_min'] = $promise_date_min;

        return $this;
    }

    /**
     * Gets promise_date_max
     *
     * @return \DateTime|null
     */
    public function getPromiseDateMax()
    {
        return $this->container['promise_date_max'];
    }

    /**
     * Sets promise_date_max
     *
     * @param \DateTime|null $promise_date_max promise_date_max
     *
     * @return self
     */
    public function setPromiseDateMax($promise_date_max)
    {
        $this->container['promise_date_max'] = $promise_date_max;

        return $this;
    }

    /**
     * Gets shipping_date_min
     *
     * @return \DateTime|null
     */
    public function getShippingDateMin()
    {
        return $this->container['shipping_date_min'];
    }

    /**
     * Sets shipping_date_min
     *
     * @param \DateTime|null $shipping_date_min shipping_date_min
     *
     * @return self
     */
    public function setShippingDateMin($shipping_date_min)
    {
        $this->container['shipping_date_min'] = $shipping_date_min;

        return $this;
    }

    /**
     * Gets shipping_date_max
     *
     * @return \DateTime|null
     */
    public function getShippingDateMax()
    {
        return $this->container['shipping_date_max'];
    }

    /**
     * Sets shipping_date_max
     *
     * @param \DateTime|null $shipping_date_max shipping_date_max
     *
     * @return self
     */
    public function setShippingDateMax($shipping_date_max)
    {
        $this->container['shipping_date_max'] = $shipping_date_max;

        return $this;
    }

    /**
     * Gets shipping
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderShipping|null
     */
    public function getShipping()
    {
        return $this->container['shipping'];
    }

    /**
     * Sets shipping
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderShipping|null $shipping shipping
     *
     * @return self
     */
    public function setShipping($shipping)
    {
        $this->container['shipping'] = $shipping;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


