<?php
/**
 * CdsMarketplaceApiModelsOrderCustomer
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Order Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CdsMarketplaceApiModelsOrderCustomer Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class CdsMarketplaceApiModelsOrderCustomer implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Cds.MarketplaceApi.Models.Order.Customer';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'civility' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsOrderCivility',
        'first_name' => 'string',
        'last_name' => 'string',
        'phone' => 'string',
        'mobile_phone' => 'string',
        'customer_id' => 'string',
        'email' => 'string',
        'encrypted_email' => 'string',
        'shipping_first_name' => 'string',
        'shipping_last_name' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'civility' => null,
        'first_name' => null,
        'last_name' => null,
        'phone' => null,
        'mobile_phone' => null,
        'customer_id' => null,
        'email' => null,
        'encrypted_email' => null,
        'shipping_first_name' => null,
        'shipping_last_name' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'civility' => 'civility',
        'first_name' => 'first_name',
        'last_name' => 'last_name',
        'phone' => 'phone',
        'mobile_phone' => 'mobile_phone',
        'customer_id' => 'customer_id',
        'email' => 'email',
        'encrypted_email' => 'encrypted_email',
        'shipping_first_name' => 'shipping_first_name',
        'shipping_last_name' => 'shipping_last_name'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'civility' => 'setCivility',
        'first_name' => 'setFirstName',
        'last_name' => 'setLastName',
        'phone' => 'setPhone',
        'mobile_phone' => 'setMobilePhone',
        'customer_id' => 'setCustomerId',
        'email' => 'setEmail',
        'encrypted_email' => 'setEncryptedEmail',
        'shipping_first_name' => 'setShippingFirstName',
        'shipping_last_name' => 'setShippingLastName'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'civility' => 'getCivility',
        'first_name' => 'getFirstName',
        'last_name' => 'getLastName',
        'phone' => 'getPhone',
        'mobile_phone' => 'getMobilePhone',
        'customer_id' => 'getCustomerId',
        'email' => 'getEmail',
        'encrypted_email' => 'getEncryptedEmail',
        'shipping_first_name' => 'getShippingFirstName',
        'shipping_last_name' => 'getShippingLastName'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['civility'] = $data['civility'] ?? null;
        $this->container['first_name'] = $data['first_name'] ?? null;
        $this->container['last_name'] = $data['last_name'] ?? null;
        $this->container['phone'] = $data['phone'] ?? null;
        $this->container['mobile_phone'] = $data['mobile_phone'] ?? null;
        $this->container['customer_id'] = $data['customer_id'] ?? null;
        $this->container['email'] = $data['email'] ?? null;
        $this->container['encrypted_email'] = $data['encrypted_email'] ?? null;
        $this->container['shipping_first_name'] = $data['shipping_first_name'] ?? null;
        $this->container['shipping_last_name'] = $data['shipping_last_name'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets civility
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsOrderCivility|null
     */
    public function getCivility()
    {
        return $this->container['civility'];
    }

    /**
     * Sets civility
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsOrderCivility|null $civility civility
     *
     * @return self
     */
    public function setCivility($civility)
    {
        $this->container['civility'] = $civility;

        return $this;
    }

    /**
     * Gets first_name
     *
     * @return string|null
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string|null $first_name first_name
     *
     * @return self
     */
    public function setFirstName($first_name)
    {
        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets last_name
     *
     * @return string|null
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     *
     * @param string|null $last_name last_name
     *
     * @return self
     */
    public function setLastName($last_name)
    {
        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string|null
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string|null $phone phone
     *
     * @return self
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets mobile_phone
     *
     * @return string|null
     */
    public function getMobilePhone()
    {
        return $this->container['mobile_phone'];
    }

    /**
     * Sets mobile_phone
     *
     * @param string|null $mobile_phone mobile_phone
     *
     * @return self
     */
    public function setMobilePhone($mobile_phone)
    {
        $this->container['mobile_phone'] = $mobile_phone;

        return $this;
    }

    /**
     * Gets customer_id
     *
     * @return string|null
     */
    public function getCustomerId()
    {
        return $this->container['customer_id'];
    }

    /**
     * Sets customer_id
     *
     * @param string|null $customer_id customer_id
     *
     * @return self
     */
    public function setCustomerId($customer_id)
    {
        $this->container['customer_id'] = $customer_id;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email email
     *
     * @return self
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets encrypted_email
     *
     * @return string|null
     */
    public function getEncryptedEmail()
    {
        return $this->container['encrypted_email'];
    }

    /**
     * Sets encrypted_email
     *
     * @param string|null $encrypted_email encrypted_email
     *
     * @return self
     */
    public function setEncryptedEmail($encrypted_email)
    {
        $this->container['encrypted_email'] = $encrypted_email;

        return $this;
    }

    /**
     * Gets shipping_first_name
     *
     * @return string|null
     */
    public function getShippingFirstName()
    {
        return $this->container['shipping_first_name'];
    }

    /**
     * Sets shipping_first_name
     *
     * @param string|null $shipping_first_name shipping_first_name
     *
     * @return self
     */
    public function setShippingFirstName($shipping_first_name)
    {
        $this->container['shipping_first_name'] = $shipping_first_name;

        return $this;
    }

    /**
     * Gets shipping_last_name
     *
     * @return string|null
     */
    public function getShippingLastName()
    {
        return $this->container['shipping_last_name'];
    }

    /**
     * Sets shipping_last_name
     *
     * @param string|null $shipping_last_name shipping_last_name
     *
     * @return self
     */
    public function setShippingLastName($shipping_last_name)
    {
        $this->container['shipping_last_name'] = $shipping_last_name;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


