<?php
/**
 * CdsMarketplaceApiModelsOffersShippingInformation
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Order Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CdsMarketplaceApiModelsOffersShippingInformation Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class CdsMarketplaceApiModelsOffersShippingInformation implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Cds.MarketplaceApi.Models.Offers.ShippingInformation';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'shipping_charges' => 'double',
        'additional_shipping_charges' => 'double',
        'min_lead_time' => 'int',
        'max_lead_time' => 'int',
        'delivery_mode_id' => 'int',
        'name' => 'string',
        'code' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'shipping_charges' => 'double',
        'additional_shipping_charges' => 'double',
        'min_lead_time' => 'int32',
        'max_lead_time' => 'int32',
        'delivery_mode_id' => 'int32',
        'name' => null,
        'code' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'shipping_charges' => 'shipping_charges',
        'additional_shipping_charges' => 'additional_shipping_charges',
        'min_lead_time' => 'min_lead_time',
        'max_lead_time' => 'max_lead_time',
        'delivery_mode_id' => 'delivery_mode_id',
        'name' => 'name',
        'code' => 'code'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'shipping_charges' => 'setShippingCharges',
        'additional_shipping_charges' => 'setAdditionalShippingCharges',
        'min_lead_time' => 'setMinLeadTime',
        'max_lead_time' => 'setMaxLeadTime',
        'delivery_mode_id' => 'setDeliveryModeId',
        'name' => 'setName',
        'code' => 'setCode'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'shipping_charges' => 'getShippingCharges',
        'additional_shipping_charges' => 'getAdditionalShippingCharges',
        'min_lead_time' => 'getMinLeadTime',
        'max_lead_time' => 'getMaxLeadTime',
        'delivery_mode_id' => 'getDeliveryModeId',
        'name' => 'getName',
        'code' => 'getCode'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['shipping_charges'] = $data['shipping_charges'] ?? null;
        $this->container['additional_shipping_charges'] = $data['additional_shipping_charges'] ?? null;
        $this->container['min_lead_time'] = $data['min_lead_time'] ?? null;
        $this->container['max_lead_time'] = $data['max_lead_time'] ?? null;
        $this->container['delivery_mode_id'] = $data['delivery_mode_id'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['code'] = $data['code'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets shipping_charges
     *
     * @return double|null
     */
    public function getShippingCharges()
    {
        return $this->container['shipping_charges'];
    }

    /**
     * Sets shipping_charges
     *
     * @param double|null $shipping_charges shipping_charges
     *
     * @return self
     */
    public function setShippingCharges($shipping_charges)
    {
        $this->container['shipping_charges'] = $shipping_charges;

        return $this;
    }

    /**
     * Gets additional_shipping_charges
     *
     * @return double|null
     */
    public function getAdditionalShippingCharges()
    {
        return $this->container['additional_shipping_charges'];
    }

    /**
     * Sets additional_shipping_charges
     *
     * @param double|null $additional_shipping_charges additional_shipping_charges
     *
     * @return self
     */
    public function setAdditionalShippingCharges($additional_shipping_charges)
    {
        $this->container['additional_shipping_charges'] = $additional_shipping_charges;

        return $this;
    }

    /**
     * Gets min_lead_time
     *
     * @return int|null
     */
    public function getMinLeadTime()
    {
        return $this->container['min_lead_time'];
    }

    /**
     * Sets min_lead_time
     *
     * @param int|null $min_lead_time min_lead_time
     *
     * @return self
     */
    public function setMinLeadTime($min_lead_time)
    {
        $this->container['min_lead_time'] = $min_lead_time;

        return $this;
    }

    /**
     * Gets max_lead_time
     *
     * @return int|null
     */
    public function getMaxLeadTime()
    {
        return $this->container['max_lead_time'];
    }

    /**
     * Sets max_lead_time
     *
     * @param int|null $max_lead_time max_lead_time
     *
     * @return self
     */
    public function setMaxLeadTime($max_lead_time)
    {
        $this->container['max_lead_time'] = $max_lead_time;

        return $this;
    }

    /**
     * Gets delivery_mode_id
     *
     * @return int|null
     */
    public function getDeliveryModeId()
    {
        return $this->container['delivery_mode_id'];
    }

    /**
     * Sets delivery_mode_id
     *
     * @param int|null $delivery_mode_id delivery_mode_id
     *
     * @return self
     */
    public function setDeliveryModeId($delivery_mode_id)
    {
        $this->container['delivery_mode_id'] = $delivery_mode_id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets code
     *
     * @return string|null
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string|null $code code
     *
     * @return self
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


