<?php
/**
 * CdsMarketplaceApiModelsOrderParcel
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Order Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CdsMarketplaceApiModelsOrderParcel Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class CdsMarketplaceApiModelsOrderParcel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Cds.MarketplaceApi.Models.Order.Parcel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'customer_num' => 'string',
        'parcel_status' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsOrderParcelStatus',
        'parcel_item_list' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsOrderParcelItem[]',
        'tracking_list' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsOrderTracking[]',
        'external_carrier_name' => 'string',
        'external_carrier_tracking_url' => 'string',
        'real_carrier_code' => 'string',
        'is_customer_return' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'customer_num' => null,
        'parcel_status' => null,
        'parcel_item_list' => null,
        'tracking_list' => null,
        'external_carrier_name' => null,
        'external_carrier_tracking_url' => 'uri',
        'real_carrier_code' => null,
        'is_customer_return' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'customer_num' => 'customer_num',
        'parcel_status' => 'parcel_status',
        'parcel_item_list' => 'parcel_item_list',
        'tracking_list' => 'tracking_list',
        'external_carrier_name' => 'external_carrier_name',
        'external_carrier_tracking_url' => 'external_carrier_tracking_url',
        'real_carrier_code' => 'real_carrier_code',
        'is_customer_return' => 'is_customer_return'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'customer_num' => 'setCustomerNum',
        'parcel_status' => 'setParcelStatus',
        'parcel_item_list' => 'setParcelItemList',
        'tracking_list' => 'setTrackingList',
        'external_carrier_name' => 'setExternalCarrierName',
        'external_carrier_tracking_url' => 'setExternalCarrierTrackingUrl',
        'real_carrier_code' => 'setRealCarrierCode',
        'is_customer_return' => 'setIsCustomerReturn'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'customer_num' => 'getCustomerNum',
        'parcel_status' => 'getParcelStatus',
        'parcel_item_list' => 'getParcelItemList',
        'tracking_list' => 'getTrackingList',
        'external_carrier_name' => 'getExternalCarrierName',
        'external_carrier_tracking_url' => 'getExternalCarrierTrackingUrl',
        'real_carrier_code' => 'getRealCarrierCode',
        'is_customer_return' => 'getIsCustomerReturn'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['customer_num'] = $data['customer_num'] ?? null;
        $this->container['parcel_status'] = $data['parcel_status'] ?? null;
        $this->container['parcel_item_list'] = $data['parcel_item_list'] ?? null;
        $this->container['tracking_list'] = $data['tracking_list'] ?? null;
        $this->container['external_carrier_name'] = $data['external_carrier_name'] ?? null;
        $this->container['external_carrier_tracking_url'] = $data['external_carrier_tracking_url'] ?? null;
        $this->container['real_carrier_code'] = $data['real_carrier_code'] ?? null;
        $this->container['is_customer_return'] = $data['is_customer_return'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets customer_num
     *
     * @return string|null
     */
    public function getCustomerNum()
    {
        return $this->container['customer_num'];
    }

    /**
     * Sets customer_num
     *
     * @param string|null $customer_num customer_num
     *
     * @return self
     */
    public function setCustomerNum($customer_num)
    {
        $this->container['customer_num'] = $customer_num;

        return $this;
    }

    /**
     * Gets parcel_status
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsOrderParcelStatus|null
     */
    public function getParcelStatus()
    {
        return $this->container['parcel_status'];
    }

    /**
     * Sets parcel_status
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsOrderParcelStatus|null $parcel_status parcel_status
     *
     * @return self
     */
    public function setParcelStatus($parcel_status)
    {
        $this->container['parcel_status'] = $parcel_status;

        return $this;
    }

    /**
     * Gets parcel_item_list
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsOrderParcelItem[]|null
     */
    public function getParcelItemList()
    {
        return $this->container['parcel_item_list'];
    }

    /**
     * Sets parcel_item_list
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsOrderParcelItem[]|null $parcel_item_list parcel_item_list
     *
     * @return self
     */
    public function setParcelItemList($parcel_item_list)
    {
        $this->container['parcel_item_list'] = $parcel_item_list;

        return $this;
    }

    /**
     * Gets tracking_list
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsOrderTracking[]|null
     */
    public function getTrackingList()
    {
        return $this->container['tracking_list'];
    }

    /**
     * Sets tracking_list
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsOrderTracking[]|null $tracking_list tracking_list
     *
     * @return self
     */
    public function setTrackingList($tracking_list)
    {
        $this->container['tracking_list'] = $tracking_list;

        return $this;
    }

    /**
     * Gets external_carrier_name
     *
     * @return string|null
     */
    public function getExternalCarrierName()
    {
        return $this->container['external_carrier_name'];
    }

    /**
     * Sets external_carrier_name
     *
     * @param string|null $external_carrier_name external_carrier_name
     *
     * @return self
     */
    public function setExternalCarrierName($external_carrier_name)
    {
        $this->container['external_carrier_name'] = $external_carrier_name;

        return $this;
    }

    /**
     * Gets external_carrier_tracking_url
     *
     * @return string|null
     */
    public function getExternalCarrierTrackingUrl()
    {
        return $this->container['external_carrier_tracking_url'];
    }

    /**
     * Sets external_carrier_tracking_url
     *
     * @param string|null $external_carrier_tracking_url external_carrier_tracking_url
     *
     * @return self
     */
    public function setExternalCarrierTrackingUrl($external_carrier_tracking_url)
    {
        $this->container['external_carrier_tracking_url'] = $external_carrier_tracking_url;

        return $this;
    }

    /**
     * Gets real_carrier_code
     *
     * @return string|null
     */
    public function getRealCarrierCode()
    {
        return $this->container['real_carrier_code'];
    }

    /**
     * Sets real_carrier_code
     *
     * @param string|null $real_carrier_code real_carrier_code
     *
     * @return self
     */
    public function setRealCarrierCode($real_carrier_code)
    {
        $this->container['real_carrier_code'] = $real_carrier_code;

        return $this;
    }

    /**
     * Gets is_customer_return
     *
     * @return bool|null
     */
    public function getIsCustomerReturn()
    {
        return $this->container['is_customer_return'];
    }

    /**
     * Sets is_customer_return
     *
     * @param bool|null $is_customer_return is_customer_return
     *
     * @return self
     */
    public function setIsCustomerReturn($is_customer_return)
    {
        $this->container['is_customer_return'] = $is_customer_return;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


