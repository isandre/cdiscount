<?php
/**
 * CdsMarketplaceApiModelsSellerIndicatorsSellerIndicator
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Order Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CdsMarketplaceApiModelsSellerIndicatorsSellerIndicator Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class CdsMarketplaceApiModelsSellerIndicatorsSellerIndicator implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Cds.MarketplaceApi.Models.SellerIndicators.SellerIndicator';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'computed_indicator_id' => 'int',
        'indicator_id' => 'int',
        'seller_id' => 'int',
        'description' => 'string',
        'value_d30' => 'double',
        'value_d60' => 'double',
        'value_d365' => 'double',
        'treshold' => 'double',
        'compliant_d30' => 'bool',
        'compliant_d60' => 'bool',
        'compliant_d365' => 'bool',
        'computation_date' => '\DateTime',
        'processed' => 'bool',
        'treshold_type' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsSellerIndicatorsTresholdType',
        'auto_check_exclusion' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'computed_indicator_id' => 'int64',
        'indicator_id' => 'int32',
        'seller_id' => 'int64',
        'description' => null,
        'value_d30' => 'double',
        'value_d60' => 'double',
        'value_d365' => 'double',
        'treshold' => 'double',
        'compliant_d30' => null,
        'compliant_d60' => null,
        'compliant_d365' => null,
        'computation_date' => 'date-time',
        'processed' => null,
        'treshold_type' => null,
        'auto_check_exclusion' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'computed_indicator_id' => 'computed_indicator_id',
        'indicator_id' => 'indicator_id',
        'seller_id' => 'seller_id',
        'description' => 'description',
        'value_d30' => 'value_d30',
        'value_d60' => 'value_d60',
        'value_d365' => 'value_d365',
        'treshold' => 'treshold',
        'compliant_d30' => 'compliant_d30',
        'compliant_d60' => 'compliant_d60',
        'compliant_d365' => 'compliant_d365',
        'computation_date' => 'computation_date',
        'processed' => 'processed',
        'treshold_type' => 'treshold_type',
        'auto_check_exclusion' => 'auto_check_exclusion'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'computed_indicator_id' => 'setComputedIndicatorId',
        'indicator_id' => 'setIndicatorId',
        'seller_id' => 'setSellerId',
        'description' => 'setDescription',
        'value_d30' => 'setValueD30',
        'value_d60' => 'setValueD60',
        'value_d365' => 'setValueD365',
        'treshold' => 'setTreshold',
        'compliant_d30' => 'setCompliantD30',
        'compliant_d60' => 'setCompliantD60',
        'compliant_d365' => 'setCompliantD365',
        'computation_date' => 'setComputationDate',
        'processed' => 'setProcessed',
        'treshold_type' => 'setTresholdType',
        'auto_check_exclusion' => 'setAutoCheckExclusion'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'computed_indicator_id' => 'getComputedIndicatorId',
        'indicator_id' => 'getIndicatorId',
        'seller_id' => 'getSellerId',
        'description' => 'getDescription',
        'value_d30' => 'getValueD30',
        'value_d60' => 'getValueD60',
        'value_d365' => 'getValueD365',
        'treshold' => 'getTreshold',
        'compliant_d30' => 'getCompliantD30',
        'compliant_d60' => 'getCompliantD60',
        'compliant_d365' => 'getCompliantD365',
        'computation_date' => 'getComputationDate',
        'processed' => 'getProcessed',
        'treshold_type' => 'getTresholdType',
        'auto_check_exclusion' => 'getAutoCheckExclusion'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['computed_indicator_id'] = $data['computed_indicator_id'] ?? null;
        $this->container['indicator_id'] = $data['indicator_id'] ?? null;
        $this->container['seller_id'] = $data['seller_id'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['value_d30'] = $data['value_d30'] ?? null;
        $this->container['value_d60'] = $data['value_d60'] ?? null;
        $this->container['value_d365'] = $data['value_d365'] ?? null;
        $this->container['treshold'] = $data['treshold'] ?? null;
        $this->container['compliant_d30'] = $data['compliant_d30'] ?? null;
        $this->container['compliant_d60'] = $data['compliant_d60'] ?? null;
        $this->container['compliant_d365'] = $data['compliant_d365'] ?? null;
        $this->container['computation_date'] = $data['computation_date'] ?? null;
        $this->container['processed'] = $data['processed'] ?? null;
        $this->container['treshold_type'] = $data['treshold_type'] ?? null;
        $this->container['auto_check_exclusion'] = $data['auto_check_exclusion'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets computed_indicator_id
     *
     * @return int|null
     */
    public function getComputedIndicatorId()
    {
        return $this->container['computed_indicator_id'];
    }

    /**
     * Sets computed_indicator_id
     *
     * @param int|null $computed_indicator_id computed_indicator_id
     *
     * @return self
     */
    public function setComputedIndicatorId($computed_indicator_id)
    {
        $this->container['computed_indicator_id'] = $computed_indicator_id;

        return $this;
    }

    /**
     * Gets indicator_id
     *
     * @return int|null
     */
    public function getIndicatorId()
    {
        return $this->container['indicator_id'];
    }

    /**
     * Sets indicator_id
     *
     * @param int|null $indicator_id indicator_id
     *
     * @return self
     */
    public function setIndicatorId($indicator_id)
    {
        $this->container['indicator_id'] = $indicator_id;

        return $this;
    }

    /**
     * Gets seller_id
     *
     * @return int|null
     */
    public function getSellerId()
    {
        return $this->container['seller_id'];
    }

    /**
     * Sets seller_id
     *
     * @param int|null $seller_id seller_id
     *
     * @return self
     */
    public function setSellerId($seller_id)
    {
        $this->container['seller_id'] = $seller_id;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description description
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets value_d30
     *
     * @return double|null
     */
    public function getValueD30()
    {
        return $this->container['value_d30'];
    }

    /**
     * Sets value_d30
     *
     * @param double|null $value_d30 value_d30
     *
     * @return self
     */
    public function setValueD30($value_d30)
    {
        $this->container['value_d30'] = $value_d30;

        return $this;
    }

    /**
     * Gets value_d60
     *
     * @return double|null
     */
    public function getValueD60()
    {
        return $this->container['value_d60'];
    }

    /**
     * Sets value_d60
     *
     * @param double|null $value_d60 value_d60
     *
     * @return self
     */
    public function setValueD60($value_d60)
    {
        $this->container['value_d60'] = $value_d60;

        return $this;
    }

    /**
     * Gets value_d365
     *
     * @return double|null
     */
    public function getValueD365()
    {
        return $this->container['value_d365'];
    }

    /**
     * Sets value_d365
     *
     * @param double|null $value_d365 value_d365
     *
     * @return self
     */
    public function setValueD365($value_d365)
    {
        $this->container['value_d365'] = $value_d365;

        return $this;
    }

    /**
     * Gets treshold
     *
     * @return double|null
     */
    public function getTreshold()
    {
        return $this->container['treshold'];
    }

    /**
     * Sets treshold
     *
     * @param double|null $treshold treshold
     *
     * @return self
     */
    public function setTreshold($treshold)
    {
        $this->container['treshold'] = $treshold;

        return $this;
    }

    /**
     * Gets compliant_d30
     *
     * @return bool|null
     */
    public function getCompliantD30()
    {
        return $this->container['compliant_d30'];
    }

    /**
     * Sets compliant_d30
     *
     * @param bool|null $compliant_d30 compliant_d30
     *
     * @return self
     */
    public function setCompliantD30($compliant_d30)
    {
        $this->container['compliant_d30'] = $compliant_d30;

        return $this;
    }

    /**
     * Gets compliant_d60
     *
     * @return bool|null
     */
    public function getCompliantD60()
    {
        return $this->container['compliant_d60'];
    }

    /**
     * Sets compliant_d60
     *
     * @param bool|null $compliant_d60 compliant_d60
     *
     * @return self
     */
    public function setCompliantD60($compliant_d60)
    {
        $this->container['compliant_d60'] = $compliant_d60;

        return $this;
    }

    /**
     * Gets compliant_d365
     *
     * @return bool|null
     */
    public function getCompliantD365()
    {
        return $this->container['compliant_d365'];
    }

    /**
     * Sets compliant_d365
     *
     * @param bool|null $compliant_d365 compliant_d365
     *
     * @return self
     */
    public function setCompliantD365($compliant_d365)
    {
        $this->container['compliant_d365'] = $compliant_d365;

        return $this;
    }

    /**
     * Gets computation_date
     *
     * @return \DateTime|null
     */
    public function getComputationDate()
    {
        return $this->container['computation_date'];
    }

    /**
     * Sets computation_date
     *
     * @param \DateTime|null $computation_date computation_date
     *
     * @return self
     */
    public function setComputationDate($computation_date)
    {
        $this->container['computation_date'] = $computation_date;

        return $this;
    }

    /**
     * Gets processed
     *
     * @return bool|null
     */
    public function getProcessed()
    {
        return $this->container['processed'];
    }

    /**
     * Sets processed
     *
     * @param bool|null $processed processed
     *
     * @return self
     */
    public function setProcessed($processed)
    {
        $this->container['processed'] = $processed;

        return $this;
    }

    /**
     * Gets treshold_type
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsSellerIndicatorsTresholdType|null
     */
    public function getTresholdType()
    {
        return $this->container['treshold_type'];
    }

    /**
     * Sets treshold_type
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsSellerIndicatorsTresholdType|null $treshold_type treshold_type
     *
     * @return self
     */
    public function setTresholdType($treshold_type)
    {
        $this->container['treshold_type'] = $treshold_type;

        return $this;
    }

    /**
     * Gets auto_check_exclusion
     *
     * @return bool|null
     */
    public function getAutoCheckExclusion()
    {
        return $this->container['auto_check_exclusion'];
    }

    /**
     * Sets auto_check_exclusion
     *
     * @param bool|null $auto_check_exclusion auto_check_exclusion
     *
     * @return self
     */
    public function setAutoCheckExclusion($auto_check_exclusion)
    {
        $this->container['auto_check_exclusion'] = $auto_check_exclusion;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


