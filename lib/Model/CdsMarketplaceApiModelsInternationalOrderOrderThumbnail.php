<?php
/**
 * CdsMarketplaceApiModelsInternationalOrderOrderThumbnail
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Order Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CdsMarketplaceApiModelsInternationalOrderOrderThumbnail Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class CdsMarketplaceApiModelsInternationalOrderOrderThumbnail implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Cds.MarketplaceApi.Models.InternationalOrder.OrderThumbnail';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'order_id' => 'string',
        'order_number' => 'string',
        'customer_name' => 'string',
        'corporation_code' => 'string',
        'corporation_name' => 'string',
        'date' => '\DateTime',
        'products' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderOrderProduct[]',
        'order_state' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderOrderStateEnum',
        'mod_ges_log' => 'string[]',
        'order_shipping_date_max' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'order_id' => null,
        'order_number' => null,
        'customer_name' => null,
        'corporation_code' => null,
        'corporation_name' => null,
        'date' => 'date-time',
        'products' => null,
        'order_state' => null,
        'mod_ges_log' => null,
        'order_shipping_date_max' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'order_id' => 'order_id',
        'order_number' => 'order_number',
        'customer_name' => 'customer_name',
        'corporation_code' => 'corporation_code',
        'corporation_name' => 'corporation_name',
        'date' => 'date',
        'products' => 'products',
        'order_state' => 'order_state',
        'mod_ges_log' => 'mod_ges_log',
        'order_shipping_date_max' => 'order_shipping_date_max'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'order_id' => 'setOrderId',
        'order_number' => 'setOrderNumber',
        'customer_name' => 'setCustomerName',
        'corporation_code' => 'setCorporationCode',
        'corporation_name' => 'setCorporationName',
        'date' => 'setDate',
        'products' => 'setProducts',
        'order_state' => 'setOrderState',
        'mod_ges_log' => 'setModGesLog',
        'order_shipping_date_max' => 'setOrderShippingDateMax'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'order_id' => 'getOrderId',
        'order_number' => 'getOrderNumber',
        'customer_name' => 'getCustomerName',
        'corporation_code' => 'getCorporationCode',
        'corporation_name' => 'getCorporationName',
        'date' => 'getDate',
        'products' => 'getProducts',
        'order_state' => 'getOrderState',
        'mod_ges_log' => 'getModGesLog',
        'order_shipping_date_max' => 'getOrderShippingDateMax'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['order_id'] = $data['order_id'] ?? null;
        $this->container['order_number'] = $data['order_number'] ?? null;
        $this->container['customer_name'] = $data['customer_name'] ?? null;
        $this->container['corporation_code'] = $data['corporation_code'] ?? null;
        $this->container['corporation_name'] = $data['corporation_name'] ?? null;
        $this->container['date'] = $data['date'] ?? null;
        $this->container['products'] = $data['products'] ?? null;
        $this->container['order_state'] = $data['order_state'] ?? null;
        $this->container['mod_ges_log'] = $data['mod_ges_log'] ?? null;
        $this->container['order_shipping_date_max'] = $data['order_shipping_date_max'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets order_id
     *
     * @return string|null
     */
    public function getOrderId()
    {
        return $this->container['order_id'];
    }

    /**
     * Sets order_id
     *
     * @param string|null $order_id order_id
     *
     * @return self
     */
    public function setOrderId($order_id)
    {
        $this->container['order_id'] = $order_id;

        return $this;
    }

    /**
     * Gets order_number
     *
     * @return string|null
     */
    public function getOrderNumber()
    {
        return $this->container['order_number'];
    }

    /**
     * Sets order_number
     *
     * @param string|null $order_number order_number
     *
     * @return self
     */
    public function setOrderNumber($order_number)
    {
        $this->container['order_number'] = $order_number;

        return $this;
    }

    /**
     * Gets customer_name
     *
     * @return string|null
     */
    public function getCustomerName()
    {
        return $this->container['customer_name'];
    }

    /**
     * Sets customer_name
     *
     * @param string|null $customer_name customer_name
     *
     * @return self
     */
    public function setCustomerName($customer_name)
    {
        $this->container['customer_name'] = $customer_name;

        return $this;
    }

    /**
     * Gets corporation_code
     *
     * @return string|null
     */
    public function getCorporationCode()
    {
        return $this->container['corporation_code'];
    }

    /**
     * Sets corporation_code
     *
     * @param string|null $corporation_code corporation_code
     *
     * @return self
     */
    public function setCorporationCode($corporation_code)
    {
        $this->container['corporation_code'] = $corporation_code;

        return $this;
    }

    /**
     * Gets corporation_name
     *
     * @return string|null
     */
    public function getCorporationName()
    {
        return $this->container['corporation_name'];
    }

    /**
     * Sets corporation_name
     *
     * @param string|null $corporation_name corporation_name
     *
     * @return self
     */
    public function setCorporationName($corporation_name)
    {
        $this->container['corporation_name'] = $corporation_name;

        return $this;
    }

    /**
     * Gets date
     *
     * @return \DateTime|null
     */
    public function getDate()
    {
        return $this->container['date'];
    }

    /**
     * Sets date
     *
     * @param \DateTime|null $date date
     *
     * @return self
     */
    public function setDate($date)
    {
        $this->container['date'] = $date;

        return $this;
    }

    /**
     * Gets products
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderOrderProduct[]|null
     */
    public function getProducts()
    {
        return $this->container['products'];
    }

    /**
     * Sets products
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderOrderProduct[]|null $products products
     *
     * @return self
     */
    public function setProducts($products)
    {
        $this->container['products'] = $products;

        return $this;
    }

    /**
     * Gets order_state
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderOrderStateEnum|null
     */
    public function getOrderState()
    {
        return $this->container['order_state'];
    }

    /**
     * Sets order_state
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderOrderStateEnum|null $order_state order_state
     *
     * @return self
     */
    public function setOrderState($order_state)
    {
        $this->container['order_state'] = $order_state;

        return $this;
    }

    /**
     * Gets mod_ges_log
     *
     * @return string[]|null
     */
    public function getModGesLog()
    {
        return $this->container['mod_ges_log'];
    }

    /**
     * Sets mod_ges_log
     *
     * @param string[]|null $mod_ges_log mod_ges_log
     *
     * @return self
     */
    public function setModGesLog($mod_ges_log)
    {
        $this->container['mod_ges_log'] = $mod_ges_log;

        return $this;
    }

    /**
     * Gets order_shipping_date_max
     *
     * @return string|null
     */
    public function getOrderShippingDateMax()
    {
        return $this->container['order_shipping_date_max'];
    }

    /**
     * Sets order_shipping_date_max
     *
     * @param string|null $order_shipping_date_max order_shipping_date_max
     *
     * @return self
     */
    public function setOrderShippingDateMax($order_shipping_date_max)
    {
        $this->container['order_shipping_date_max'] = $order_shipping_date_max;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


