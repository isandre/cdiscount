<?php
/**
 * CdsMarketplaceApiModelsInternationalOrderSearchOrderRequest
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Order Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CdsMarketplaceApiModelsInternationalOrderSearchOrderRequest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class CdsMarketplaceApiModelsInternationalOrderSearchOrderRequest implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Cds.MarketplaceApi.Models.InternationalOrder.SearchOrderRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'sales_channel_ref' => 'string',
        'reference' => 'string',
        'purchase_start_date' => '\DateTime',
        'purchase_end_date' => '\DateTime',
        'created_start_date' => '\DateTime',
        'created_end_date' => '\DateTime',
        'updated_start_date' => '\DateTime',
        'updated_end_date' => '\DateTime',
        'shipping_country' => 'string',
        'seller_status' => 'string',
        'supply_mode' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'sales_channel_ref' => null,
        'reference' => null,
        'purchase_start_date' => 'date-time',
        'purchase_end_date' => 'date-time',
        'created_start_date' => 'date-time',
        'created_end_date' => 'date-time',
        'updated_start_date' => 'date-time',
        'updated_end_date' => 'date-time',
        'shipping_country' => null,
        'seller_status' => null,
        'supply_mode' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'sales_channel_ref' => 'sales_channel_ref',
        'reference' => 'reference',
        'purchase_start_date' => 'purchase_start_date',
        'purchase_end_date' => 'purchase_end_date',
        'created_start_date' => 'created_start_date',
        'created_end_date' => 'created_end_date',
        'updated_start_date' => 'updated_start_date',
        'updated_end_date' => 'updated_end_date',
        'shipping_country' => 'shipping_country',
        'seller_status' => 'seller_status',
        'supply_mode' => 'supply_mode'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'sales_channel_ref' => 'setSalesChannelRef',
        'reference' => 'setReference',
        'purchase_start_date' => 'setPurchaseStartDate',
        'purchase_end_date' => 'setPurchaseEndDate',
        'created_start_date' => 'setCreatedStartDate',
        'created_end_date' => 'setCreatedEndDate',
        'updated_start_date' => 'setUpdatedStartDate',
        'updated_end_date' => 'setUpdatedEndDate',
        'shipping_country' => 'setShippingCountry',
        'seller_status' => 'setSellerStatus',
        'supply_mode' => 'setSupplyMode'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'sales_channel_ref' => 'getSalesChannelRef',
        'reference' => 'getReference',
        'purchase_start_date' => 'getPurchaseStartDate',
        'purchase_end_date' => 'getPurchaseEndDate',
        'created_start_date' => 'getCreatedStartDate',
        'created_end_date' => 'getCreatedEndDate',
        'updated_start_date' => 'getUpdatedStartDate',
        'updated_end_date' => 'getUpdatedEndDate',
        'shipping_country' => 'getShippingCountry',
        'seller_status' => 'getSellerStatus',
        'supply_mode' => 'getSupplyMode'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['sales_channel_ref'] = $data['sales_channel_ref'] ?? null;
        $this->container['reference'] = $data['reference'] ?? null;
        $this->container['purchase_start_date'] = $data['purchase_start_date'] ?? null;
        $this->container['purchase_end_date'] = $data['purchase_end_date'] ?? null;
        $this->container['created_start_date'] = $data['created_start_date'] ?? null;
        $this->container['created_end_date'] = $data['created_end_date'] ?? null;
        $this->container['updated_start_date'] = $data['updated_start_date'] ?? null;
        $this->container['updated_end_date'] = $data['updated_end_date'] ?? null;
        $this->container['shipping_country'] = $data['shipping_country'] ?? null;
        $this->container['seller_status'] = $data['seller_status'] ?? null;
        $this->container['supply_mode'] = $data['supply_mode'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets sales_channel_ref
     *
     * @return string|null
     */
    public function getSalesChannelRef()
    {
        return $this->container['sales_channel_ref'];
    }

    /**
     * Sets sales_channel_ref
     *
     * @param string|null $sales_channel_ref sales_channel_ref
     *
     * @return self
     */
    public function setSalesChannelRef($sales_channel_ref)
    {
        $this->container['sales_channel_ref'] = $sales_channel_ref;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return string|null
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string|null $reference reference
     *
     * @return self
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets purchase_start_date
     *
     * @return \DateTime|null
     */
    public function getPurchaseStartDate()
    {
        return $this->container['purchase_start_date'];
    }

    /**
     * Sets purchase_start_date
     *
     * @param \DateTime|null $purchase_start_date purchase_start_date
     *
     * @return self
     */
    public function setPurchaseStartDate($purchase_start_date)
    {
        $this->container['purchase_start_date'] = $purchase_start_date;

        return $this;
    }

    /**
     * Gets purchase_end_date
     *
     * @return \DateTime|null
     */
    public function getPurchaseEndDate()
    {
        return $this->container['purchase_end_date'];
    }

    /**
     * Sets purchase_end_date
     *
     * @param \DateTime|null $purchase_end_date purchase_end_date
     *
     * @return self
     */
    public function setPurchaseEndDate($purchase_end_date)
    {
        $this->container['purchase_end_date'] = $purchase_end_date;

        return $this;
    }

    /**
     * Gets created_start_date
     *
     * @return \DateTime|null
     */
    public function getCreatedStartDate()
    {
        return $this->container['created_start_date'];
    }

    /**
     * Sets created_start_date
     *
     * @param \DateTime|null $created_start_date created_start_date
     *
     * @return self
     */
    public function setCreatedStartDate($created_start_date)
    {
        $this->container['created_start_date'] = $created_start_date;

        return $this;
    }

    /**
     * Gets created_end_date
     *
     * @return \DateTime|null
     */
    public function getCreatedEndDate()
    {
        return $this->container['created_end_date'];
    }

    /**
     * Sets created_end_date
     *
     * @param \DateTime|null $created_end_date created_end_date
     *
     * @return self
     */
    public function setCreatedEndDate($created_end_date)
    {
        $this->container['created_end_date'] = $created_end_date;

        return $this;
    }

    /**
     * Gets updated_start_date
     *
     * @return \DateTime|null
     */
    public function getUpdatedStartDate()
    {
        return $this->container['updated_start_date'];
    }

    /**
     * Sets updated_start_date
     *
     * @param \DateTime|null $updated_start_date updated_start_date
     *
     * @return self
     */
    public function setUpdatedStartDate($updated_start_date)
    {
        $this->container['updated_start_date'] = $updated_start_date;

        return $this;
    }

    /**
     * Gets updated_end_date
     *
     * @return \DateTime|null
     */
    public function getUpdatedEndDate()
    {
        return $this->container['updated_end_date'];
    }

    /**
     * Sets updated_end_date
     *
     * @param \DateTime|null $updated_end_date updated_end_date
     *
     * @return self
     */
    public function setUpdatedEndDate($updated_end_date)
    {
        $this->container['updated_end_date'] = $updated_end_date;

        return $this;
    }

    /**
     * Gets shipping_country
     *
     * @return string|null
     */
    public function getShippingCountry()
    {
        return $this->container['shipping_country'];
    }

    /**
     * Sets shipping_country
     *
     * @param string|null $shipping_country shipping_country
     *
     * @return self
     */
    public function setShippingCountry($shipping_country)
    {
        $this->container['shipping_country'] = $shipping_country;

        return $this;
    }

    /**
     * Gets seller_status
     *
     * @return string|null
     */
    public function getSellerStatus()
    {
        return $this->container['seller_status'];
    }

    /**
     * Sets seller_status
     *
     * @param string|null $seller_status seller_status
     *
     * @return self
     */
    public function setSellerStatus($seller_status)
    {
        $this->container['seller_status'] = $seller_status;

        return $this;
    }

    /**
     * Gets supply_mode
     *
     * @return string|null
     */
    public function getSupplyMode()
    {
        return $this->container['supply_mode'];
    }

    /**
     * Sets supply_mode
     *
     * @param string|null $supply_mode supply_mode
     *
     * @return self
     */
    public function setSupplyMode($supply_mode)
    {
        $this->container['supply_mode'] = $supply_mode;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


