<?php
/**
 * CdsMarketplaceApiModelsInternationalOrderOrder
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Order Management
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CdsMarketplaceApiModelsInternationalOrderOrder Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class CdsMarketplaceApiModelsInternationalOrderOrder implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Cds.MarketplaceApi.Models.InternationalOrder.Order';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'sales_channel_ref' => 'string',
        'reference' => 'string',
        'motive' => 'string',
        'seller' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderSeller',
        'status' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderDtosInternationalOrderStatusEnum',
        'order_items' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderOrderItem[]',
        'information' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderInformation',
        'order_seller_id' => 'string',
        'currency_code' => 'string',
        'customer_reference' => 'string',
        'purchase_date' => '\DateTime',
        'total_price' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderPricing',
        'billing' => '\OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderCustomerInformations'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'sales_channel_ref' => null,
        'reference' => null,
        'motive' => null,
        'seller' => null,
        'status' => null,
        'order_items' => null,
        'information' => null,
        'order_seller_id' => null,
        'currency_code' => null,
        'customer_reference' => null,
        'purchase_date' => 'date-time',
        'total_price' => null,
        'billing' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'sales_channel_ref' => 'sales_channel_ref',
        'reference' => 'reference',
        'motive' => 'motive',
        'seller' => 'seller',
        'status' => 'status',
        'order_items' => 'order_items',
        'information' => 'information',
        'order_seller_id' => 'order_seller_id',
        'currency_code' => 'currency_code',
        'customer_reference' => 'customer_reference',
        'purchase_date' => 'purchase_date',
        'total_price' => 'total_price',
        'billing' => 'billing'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'sales_channel_ref' => 'setSalesChannelRef',
        'reference' => 'setReference',
        'motive' => 'setMotive',
        'seller' => 'setSeller',
        'status' => 'setStatus',
        'order_items' => 'setOrderItems',
        'information' => 'setInformation',
        'order_seller_id' => 'setOrderSellerId',
        'currency_code' => 'setCurrencyCode',
        'customer_reference' => 'setCustomerReference',
        'purchase_date' => 'setPurchaseDate',
        'total_price' => 'setTotalPrice',
        'billing' => 'setBilling'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'sales_channel_ref' => 'getSalesChannelRef',
        'reference' => 'getReference',
        'motive' => 'getMotive',
        'seller' => 'getSeller',
        'status' => 'getStatus',
        'order_items' => 'getOrderItems',
        'information' => 'getInformation',
        'order_seller_id' => 'getOrderSellerId',
        'currency_code' => 'getCurrencyCode',
        'customer_reference' => 'getCustomerReference',
        'purchase_date' => 'getPurchaseDate',
        'total_price' => 'getTotalPrice',
        'billing' => 'getBilling'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['sales_channel_ref'] = $data['sales_channel_ref'] ?? null;
        $this->container['reference'] = $data['reference'] ?? null;
        $this->container['motive'] = $data['motive'] ?? null;
        $this->container['seller'] = $data['seller'] ?? null;
        $this->container['status'] = $data['status'] ?? null;
        $this->container['order_items'] = $data['order_items'] ?? null;
        $this->container['information'] = $data['information'] ?? null;
        $this->container['order_seller_id'] = $data['order_seller_id'] ?? null;
        $this->container['currency_code'] = $data['currency_code'] ?? null;
        $this->container['customer_reference'] = $data['customer_reference'] ?? null;
        $this->container['purchase_date'] = $data['purchase_date'] ?? null;
        $this->container['total_price'] = $data['total_price'] ?? null;
        $this->container['billing'] = $data['billing'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets sales_channel_ref
     *
     * @return string|null
     */
    public function getSalesChannelRef()
    {
        return $this->container['sales_channel_ref'];
    }

    /**
     * Sets sales_channel_ref
     *
     * @param string|null $sales_channel_ref sales_channel_ref
     *
     * @return self
     */
    public function setSalesChannelRef($sales_channel_ref)
    {
        $this->container['sales_channel_ref'] = $sales_channel_ref;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return string|null
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string|null $reference reference
     *
     * @return self
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets motive
     *
     * @return string|null
     */
    public function getMotive()
    {
        return $this->container['motive'];
    }

    /**
     * Sets motive
     *
     * @param string|null $motive motive
     *
     * @return self
     */
    public function setMotive($motive)
    {
        $this->container['motive'] = $motive;

        return $this;
    }

    /**
     * Gets seller
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderSeller|null
     */
    public function getSeller()
    {
        return $this->container['seller'];
    }

    /**
     * Sets seller
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderSeller|null $seller seller
     *
     * @return self
     */
    public function setSeller($seller)
    {
        $this->container['seller'] = $seller;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderDtosInternationalOrderStatusEnum|null
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderDtosInternationalOrderStatusEnum|null $status status
     *
     * @return self
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets order_items
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderOrderItem[]|null
     */
    public function getOrderItems()
    {
        return $this->container['order_items'];
    }

    /**
     * Sets order_items
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderOrderItem[]|null $order_items order_items
     *
     * @return self
     */
    public function setOrderItems($order_items)
    {
        $this->container['order_items'] = $order_items;

        return $this;
    }

    /**
     * Gets information
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderInformation|null
     */
    public function getInformation()
    {
        return $this->container['information'];
    }

    /**
     * Sets information
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderInformation|null $information information
     *
     * @return self
     */
    public function setInformation($information)
    {
        $this->container['information'] = $information;

        return $this;
    }

    /**
     * Gets order_seller_id
     *
     * @return string|null
     */
    public function getOrderSellerId()
    {
        return $this->container['order_seller_id'];
    }

    /**
     * Sets order_seller_id
     *
     * @param string|null $order_seller_id order_seller_id
     *
     * @return self
     */
    public function setOrderSellerId($order_seller_id)
    {
        $this->container['order_seller_id'] = $order_seller_id;

        return $this;
    }

    /**
     * Gets currency_code
     *
     * @return string|null
     */
    public function getCurrencyCode()
    {
        return $this->container['currency_code'];
    }

    /**
     * Sets currency_code
     *
     * @param string|null $currency_code currency_code
     *
     * @return self
     */
    public function setCurrencyCode($currency_code)
    {
        $this->container['currency_code'] = $currency_code;

        return $this;
    }

    /**
     * Gets customer_reference
     *
     * @return string|null
     */
    public function getCustomerReference()
    {
        return $this->container['customer_reference'];
    }

    /**
     * Sets customer_reference
     *
     * @param string|null $customer_reference customer_reference
     *
     * @return self
     */
    public function setCustomerReference($customer_reference)
    {
        $this->container['customer_reference'] = $customer_reference;

        return $this;
    }

    /**
     * Gets purchase_date
     *
     * @return \DateTime|null
     */
    public function getPurchaseDate()
    {
        return $this->container['purchase_date'];
    }

    /**
     * Sets purchase_date
     *
     * @param \DateTime|null $purchase_date purchase_date
     *
     * @return self
     */
    public function setPurchaseDate($purchase_date)
    {
        $this->container['purchase_date'] = $purchase_date;

        return $this;
    }

    /**
     * Gets total_price
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderPricing|null
     */
    public function getTotalPrice()
    {
        return $this->container['total_price'];
    }

    /**
     * Sets total_price
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderPricing|null $total_price total_price
     *
     * @return self
     */
    public function setTotalPrice($total_price)
    {
        $this->container['total_price'] = $total_price;

        return $this;
    }

    /**
     * Gets billing
     *
     * @return \OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderCustomerInformations|null
     */
    public function getBilling()
    {
        return $this->container['billing'];
    }

    /**
     * Sets billing
     *
     * @param \OpenAPI\Client\Model\CdsMarketplaceApiModelsInternationalOrderCustomerInformations|null $billing billing
     *
     * @return self
     */
    public function setBilling($billing)
    {
        $this->container['billing'] = $billing;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


